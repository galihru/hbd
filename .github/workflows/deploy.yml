name: Deploy Jekyll Site with Custom Headers

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Fix Gemfile for Jekyll
        run: |
          # Backup original Gemfile
          cp Gemfile Gemfile.original
          
          # Create basic Gemfile if not exists
          if [ ! -f "Gemfile" ]; then
            echo "source 'https://rubygems.org'" > Gemfile
            echo "gem 'jekyll', '~> 4.3'" >> Gemfile
            echo "gem 'github-pages', group: :jekyll_plugins" >> Gemfile
          else
            # Remove gemspec reference if exists
            sed -i '/gemspec/d' Gemfile
            # Add required gems if not present
            grep -q "gem 'jekyll'" Gemfile || echo "gem 'jekyll', '~> 4.3'" >> Gemfile
            grep -q "gem 'github-pages'" Gemfile || echo "gem 'github-pages', group: :jekyll_plugins" >> Gemfile
          fi

          # Remove problematic gemspec if exists
          rm -f *.gemspec || true

      - name: Install dependencies
        run: bundle install

      - name: Build with Jekyll
        run: bundle exec jekyll build --destination ./_site

      - name: Create _headers file
        run: |
          cat << 'EOF' > ./_headers
          /*
            Content-Security-Policy: default-src 'self' *; script-src 'self' 'unsafe-inline' 'unsafe-eval' *; frame-ancestors 'self'; style-src 'self' 'unsafe-inline' *; img-src 'self' data: blob: *; font-src 'self' *; connect-src 'self' *; media-src 'self' *; frame-src 'self' *; worker-src 'self' blob: *; form-action 'self' *
            Strict-Transport-Security: max-age=31536000; includeSubDomains; preload
            Cross-Origin-Opener-Policy: same-origin
            X-Frame-Options: DENY
            X-Content-Type-Options: nosniff
            Referrer-Policy: strict-origin-when-cross-origin
            Permissions-Policy: geolocation=(), microphone=(), camera=(), payment=()
          EOF
          mv _headers _site/
          echo "Generated _headers file:"
          cat _site/_headers

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
